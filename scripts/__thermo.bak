#!/usr/bin/python
# -*- coding:utf-8 -*-
import sys
import os
picdir = os.path.join(os.path.dirname(os.path.dirname(os.path.realpath(__file__))), 'assets')
libdir = os.path.join(os.path.dirname(os.path.dirname(os.path.realpath(__file__))), 'lib')
if os.path.exists(libdir):
    sys.path.append(libdir)

import json
import logging
from waveshare_epd import epd2in7

import time
from time import localtime, strftime
os.environ['TZ'] = 'Europe/Rome'
time.tzset()

from PIL import Image,ImageDraw,ImageFont
import traceback

from gpiozero import Button

logging.basicConfig(level=logging.INFO)

try:

# TODO:
# - buttons
# - refresh
# - wiring!!
# ...

###
# read from json file
    with open('thermo.json') as json_file:
        data = json.load(json_file)
        for t in data['thermo']:
            print('current_temp:' + str(t['current_temp']))
            tempNow = t['current_temp']
            setTemp = t['set_temp']
            setProg = t['set_prog']






    logging.info("init and Clear")
    epd = epd2in7.EPD()
    
    epd.init()
    epd.Clear(0xFF)
    
    fontXS = ImageFont.truetype(os.path.join(picdir, 'retro_gaming.ttf'), 11)
    fontS = ImageFont.truetype(os.path.join(picdir, 'retro_gaming.ttf'), 16)
    fontM = ImageFont.truetype(os.path.join(picdir, 'retro_gaming.ttf'), 18)
    fontL = ImageFont.truetype(os.path.join(picdir, 'retro_gaming.ttf'), 19)
    #fontXL = ImageFont.truetype(os.path.join(picdir, 'Rubik-Light.ttf'), 48)
    fontTempInt = ImageFont.truetype(os.path.join(picdir, 'retro_gaming.ttf'), 72)
    fontTempUnit = ImageFont.truetype(os.path.join(picdir, 'retro_gaming.ttf'), 19)
    fontTempDec = ImageFont.truetype(os.path.join(picdir, 'retro_gaming.ttf'), 36)

    datenow = strftime("%d %b", localtime())
    timenow = strftime("%H:%M", localtime())
    timeW,timeH = fontM.getsize(timenow)
    timeX = (epd.width) - timeW - 5

    #tempNow = 20.7
    tempW,tempH = fontTempInt.getsize(str(round(tempNow)))
    tempoffset = 5+tempW+5

    logging.info("Mio test...")
    epd.Init_4Gray()
    Limage = Image.new('1', (epd.width, epd.height), 255)  # 255: clear the frame
    draw = ImageDraw.Draw(Limage)

    # screen size: 176wx264h
    draw.text((5, 9), datenow, font = fontXS, fill = epd.GRAY4)
    draw.text((timeX, 4), timenow, font = fontM, fill = epd.GRAY4)
    # ---------------------------------------

    draw.rectangle((0, 30, 176, 242), fill= epd.GRAY4)
    draw.text((5, 45), 'TEMP:', font = fontXS, fill = epd.GRAY1)
    draw.text((5, 45), str(round(tempNow)), font = fontTempInt, fill = epd.GRAY1)
    draw.text((tempoffset, 58), 'o', font = fontXS, fill = epd.GRAY1)
    draw.text((tempoffset+10, 58), 'C', font = fontTempUnit, fill = epd.GRAY1)
    draw.text((tempoffset, 80),'.'+ str(tempNow).split('.')[1], font = fontTempDec, fill = epd.GRAY1)
    draw.text((5, 125), 'SET:', font = fontXS, fill = epd.GRAY1)
    draw.text((45, 125), str(setTemp), font = fontXS, fill = epd.GRAY1)

    fire = Image.open(os.path.join(picdir, 'fire-solid-16.png'))
    Limage.paste(fire, ((epd.width - 16 - 10), 45))


    # ---------------------------------------

    draw.line([5,145, 171,145], fill = epd.GRAY2)

    # ---------------------------------------
    draw.text((5, 246), setProg+' ', font = fontXS, fill = epd.GRAY4)
    draw.text((70, 244), '+ ', font = fontS, fill = epd.GRAY4)
    draw.text((133, 244), '- ', font = fontS, fill = epd.GRAY4)


    # ---------------------------------------
    # ------------- BUTTONS -----------------
    # ---------------------------------------

    btn1 = Button(5) 	# cycle to auto/t2/t3
    btn2 = Button(6) 	# increase temp
    btn3 = Button(13)	# decrease temp
    btn4 = Button(19)	# fatality move!

    def cycleModes():
        printTpDisplay("gigi")

    btn1.when_pressed = cycleModes

    epd.display_4Gray(epd.getbuffer_4Gray(Limage))
    time.sleep(2)




except IOError as e:
    logging.info(e)
    
except KeyboardInterrupt:    
    logging.info("ctrl + c:")
    epd2in7.epdconfig.module_exit()
    exit()
